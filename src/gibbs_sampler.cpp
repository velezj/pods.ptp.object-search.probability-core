
#include "gibbs_sampler.hpp"


namespace probability_core {


  //=========================================================================

  std::vector<double>
  gibbs_sample( const gibbs_sampler_joint_t& joint,
		gibbs_sampler_workspace_t& workspace )
  {
    
    // start out with the previous parameters
    std::vector<double> parameters = workspace.parameters;
    
    // now change each one at a  time
    for( size_t param_i = 0; param_i < parameters.size(); ++param_i ) {
    
      // sample from the conditional given all but the ith parameter
      double new_param = 
	workspace.samplers[ param_i ]( joint.conditional( param_i, parameters ) );

      // set the new parameter and continue
      parameters[ param_i ] = new_param;

    }

    // set the workspace to these new parameters
    workspace.parameters = parameters;

    // return the sample
    return parameters;
  }

  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  //=========================================================================
  


}
